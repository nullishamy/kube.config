{{- if .Values.synapse.ingress.enabled }}
{{- $svcPort := .Values.synapse.service.port -}}
{{- $fullname := printf "%s-synapse" (include "matrix.fullname" .) -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullname }}
  labels:
    {{- include "matrix.labels" . | nindent 4 }}
  {{- with .Values.synapse.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.synapse.ingress.className }}
  ingressClassName: {{ .Values.synapse.ingress.className }}
  {{- end }}
  rules:
    {{- range .Values.synapse.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path | quote }}
            pathType: {{ .pathType }}
            backend:
              {{- if hasKey . "backend" }}{{/* if user has provided a backend for path */}}
              {{- with .backend }}
              {{- toYaml . | nindent 15 }}
              {{- end }}
              {{- else -}}{{/* else we template out a service backend */}}
              service:
                name: {{ $fullname }}
                port:
                  number: {{ $svcPort }}
              {{- end }}{{/* end checking for backend key */}}
          {{- end }}{{/* end range paths */}}
    {{- end }}{{/* end range hosts */}}
  {{- with .Values.synapse.ingress.tls }}
  tls:
    {{- range . }}
    - secretName: {{ .secretName }}
      hosts:
        {{- range .hosts }}
        - {{ . }}
        {{- end }}
    {{- end }}{{/* end range of tls list items */}}
  {{- end }}{{/* end with .Values.synapse.tls */}}
{{- end }}{{/* end if synapse.ingress.enabled */}}

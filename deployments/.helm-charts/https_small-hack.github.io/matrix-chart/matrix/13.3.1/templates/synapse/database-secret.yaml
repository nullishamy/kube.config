{{/*
if postgresql.global.postgresql.auth.existingSecret is not passed in, then we create a
secret to store the credentials without it being in a configmap in plaintext.
*/}}
{{- if and (not .Values.postgresql.global.postgresql.auth.existingSecret) (not .Values.externalDatabase.existingSecret )}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "matrix.fullname" . }}-db-secret
  labels:
    app.kubernetes.io/name: {{ include "matrix.name" . }}
    helm.sh/chart: {{ include "matrix.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
data:
  {{- if and .Values.postgresql.enabled (not .Values.postgresql.global.postgresql.auth.existingSecret) }}
  database: {{ "matrix" | b64enc | quote }}
  username: {{ .Values.postgresql.global.postgresql.auth.username | b64enc | quote }}
  password: {{ .Values.postgresql.global.postgresql.auth.password | b64enc | quote }}
  {{- else if and .Values.externalDatabase.enabled (not .Values.externalDatabase.existingSecret) }}
  database: {{ .Values.externalDatabase.database | b64enc | quote }}
  username: {{ .Values.externalDatabase.username | b64enc | quote }}
  password: {{ .Values.externalDatabase.password | b64enc | quote }}
  {{- end }}
{{- end }}
